{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/tableviewer/src/FileUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = ({\n  onFileUpload,\n  onUploadError\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileSize, setFileSize] = useState(null);\n  const [numRows, setNumRows] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setFileSize(selectedFile.size);\n      setNumRows(null); // Reset numRows when a new file is selected\n      onUploadError(null);\n    }\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      console.error('Please select a file.');\n      onUploadError('Please select a file.');\n      return;\n    }\n    try {\n      setIsUploading(true);\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await axios.post('http://localhost:5555/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('File uploaded successfully:', response.data);\n      setNumRows(response.data.numRows);\n      onFileUpload(response.data);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      onUploadError('An error occurred while uploading the file. Please try again.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv,.json\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), fileSize && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"File size: \", Math.round(fileSize / 1024), \" KB\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), numRows !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of rows: \", numRows]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: isUploading,\n      children: isUploading ? 'Uploading...' : 'Upload'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploader, \"06Rki8qsibNxI+lPLtRKZNSLzyU=\");\n_c = FileUploader;\nFileUploader.propTypes = {\n  onFileUpload: PropTypes.func.isRequired,\n  onUploadError: PropTypes.func.isRequired\n};\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","PropTypes","axios","jsxDEV","_jsxDEV","FileUploader","onFileUpload","onUploadError","_s","file","setFile","fileSize","setFileSize","numRows","setNumRows","isUploading","setIsUploading","handleFileChange","event","selectedFile","target","files","size","handleUpload","console","error","formData","FormData","append","response","post","headers","log","data","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","onClick","disabled","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/tableviewer/src/FileUploader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst FileUploader = ({ onFileUpload, onUploadError }) => {\n  const [file, setFile] = useState(null);\n  const [fileSize, setFileSize] = useState(null);\n  const [numRows, setNumRows] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n\n  const handleFileChange = (event) => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setFileSize(selectedFile.size);\n      setNumRows(null); // Reset numRows when a new file is selected\n      onUploadError(null);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      console.error('Please select a file.');\n      onUploadError('Please select a file.');\n      return;\n    }\n\n    try {\n      setIsUploading(true);\n\n      const formData = new FormData();\n      formData.append('file', file);\n\n      const response = await axios.post('http://localhost:5555/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      console.log('File uploaded successfully:', response.data);\n      setNumRows(response.data.numRows);\n      onFileUpload(response.data);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      onUploadError('An error occurred while uploading the file. Please try again.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" accept=\".csv,.json\" onChange={handleFileChange} />\n      {fileSize && (\n        <p>File size: {Math.round(fileSize / 1024)} KB</p>\n      )}\n      {numRows !== null && (\n        <p>Number of rows: {numRows}</p>\n      )}\n      <button onClick={handleUpload} disabled={isUploading}>\n        {isUploading ? 'Uploading...' : 'Upload'}\n      </button>\n    </div>\n  );\n};\n\nFileUploader.propTypes = {\n  onFileUpload: PropTypes.func.isRequired,\n  onUploadError: PropTypes.func.isRequired,\n};\n\nexport default FileUploader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}