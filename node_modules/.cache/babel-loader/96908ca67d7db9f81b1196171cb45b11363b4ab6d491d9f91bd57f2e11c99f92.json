{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/tableviewer/src/FileUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUploader({\n  onFileUpload,\n  onUploadError\n}) {\n  _s();\n  const [fileData, setFileData] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const handleFileChange = async event => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      try {\n        const response = await axios.post('http://localhost:5555/api/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setFileData({\n          filename: selectedFile.name,\n          size: selectedFile.size,\n          rowCount: response.data.rowCount // Assuming the server sends rowCount\n        });\n\n        // Clear the error state\n        setUploadError(null);\n      } catch (error) {\n        onUploadError(error);\n        setUploadError('Error uploading file.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload a CSV File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), fileData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"File Name: \", fileData.filename]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"File Size: \", fileData.size, \" bytes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Row Count: \", fileData.rowCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), uploadError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: uploadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploader, \"aR5cx2lnAUQJRhOGgQMnaOVe8Hc=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUploader","onFileUpload","onUploadError","_s","fileData","setFileData","uploadError","setUploadError","handleFileChange","event","selectedFile","target","files","formData","FormData","append","response","post","headers","filename","name","size","rowCount","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","_c","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/tableviewer/src/FileUploader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction FileUploader({ onFileUpload, onUploadError }) {\n  const [fileData, setFileData] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n\n  const handleFileChange = async (event) => {\n    const selectedFile = event.target.files[0];\n\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n\n      try {\n        const response = await axios.post('http://localhost:5555/api/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n\n        setFileData({\n          filename: selectedFile.name,\n          size: selectedFile.size,\n          rowCount: response.data.rowCount, // Assuming the server sends rowCount\n        });\n\n        // Clear the error state\n        setUploadError(null);\n      } catch (error) {\n        onUploadError(error);\n        setUploadError('Error uploading file.');\n      }\n    }\n  };\n\n  return (\n    <div className=\"file-uploader\">\n      <h2>Upload a CSV File</h2>\n      <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\n      {fileData && (\n        <div>\n          <p>File Name: {fileData.filename}</p>\n          <p>File Size: {fileData.size} bytes</p>\n          <p>Row Count: {fileData.rowCount}</p>\n        </div>\n      )}\n      {uploadError && <p className=\"error\">{uploadError}</p>}\n    </div>\n  );\n}\n\nexport default FileUploader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}