{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/tableviewer/src/DataTable.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataTable({\n  data,\n  error\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }, this), data.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(data[0]).map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(row).map((cell, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 19\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DataTable","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Object","keys","map","header","row","index","values","cell","_c","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/tableviewer/src/DataTable.js"],"sourcesContent":["import React from 'react';\n\nfunction DataTable({ data, error }) {\n  return (\n    <div className=\"data-table\">\n      <h2>Data Table</h2>\n      {error && <p className=\"error\">{error}</p>}\n      {data.length > 0 ? (\n        <table>\n          <thead>\n            <tr>\n              {/* Assuming you have headers, adjust as needed */}\n              {Object.keys(data[0]).map((header) => (\n                <th key={header}>{header}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((row, index) => (\n              <tr key={index}>\n                {Object.values(row).map((cell, index) => (\n                  <td key={index}>{cell}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>No data to display.</p>\n      )}\n    </div>\n  );\n}\n\nexport default DataTable;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,EAAE;EAClC,oBACEH,OAAA;IAAKI,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBL,OAAA;MAAAK,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBN,KAAK,iBAAIH,OAAA;MAAGI,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzCP,IAAI,CAACQ,MAAM,GAAG,CAAC,gBACdV,OAAA;MAAAK,QAAA,gBACEL,OAAA;QAAAK,QAAA,eACEL,OAAA;UAAAK,QAAA,EAEGM,MAAM,CAACC,IAAI,CAACV,IAAI,CAAC,CAAC,CAAC,CAAC,CAACW,GAAG,CAAEC,MAAM,iBAC/Bd,OAAA;YAAAK,QAAA,EAAkBS;UAAM,GAAfA,MAAM;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAC9B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRT,OAAA;QAAAK,QAAA,EACGH,IAAI,CAACW,GAAG,CAAC,CAACE,GAAG,EAAEC,KAAK,kBACnBhB,OAAA;UAAAK,QAAA,EACGM,MAAM,CAACM,MAAM,CAACF,GAAG,CAAC,CAACF,GAAG,CAAC,CAACK,IAAI,EAAEF,KAAK,kBAClChB,OAAA;YAAAK,QAAA,EAAiBa;UAAI,GAAZF,KAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC3B;QAAC,GAHKO,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAERT,OAAA;MAAAK,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACU,EAAA,GA9BQlB,SAAS;AAgClB,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}