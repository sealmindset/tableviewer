{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/tableviewer/src/FileUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = ({\n  onFileUpload,\n  onUploadError\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileSize, setFileSize] = useState(null);\n  const [numRows, setNumRows] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n    setFileSize(selectedFile.size);\n    setNumRows(null);\n    onUploadError(null);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      console.error('Please select a file.');\n      onUploadError('Please select a file.');\n      return;\n    }\n    try {\n      setIsUploading(true);\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('File uploaded successfully:', response.data);\n      setNumRows(response.data.numRows);\n      onFileUpload(response.data);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      onUploadError('An error occurred while uploading the file. Please try again.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv,.json\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), fileSize && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"File Size: \", fileSize, \" bytes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 20\n    }, this), numRows !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of Rows: \", numRows]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }, this), isUploading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Uploading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploader, \"06Rki8qsibNxI+lPLtRKZNSLzyU=\");\n_c = FileUploader;\nFileUploader.propTypes = {\n  onFileUpload: PropTypes.func.isRequired,\n  onUploadError: PropTypes.func.isRequired\n};\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","PropTypes","axios","jsxDEV","_jsxDEV","FileUploader","onFileUpload","onUploadError","_s","file","setFile","fileSize","setFileSize","numRows","setNumRows","isUploading","setIsUploading","handleFileChange","event","selectedFile","target","files","size","handleUpload","console","error","formData","FormData","append","response","post","headers","log","data","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/tableviewer/src/FileUploader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst FileUploader = ({ onFileUpload, onUploadError }) => {\n  const [file, setFile] = useState(null);\n  const [fileSize, setFileSize] = useState(null);\n  const [numRows, setNumRows] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n\n  const handleFileChange = (event) => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n    setFileSize(selectedFile.size);\n    setNumRows(null);\n    onUploadError(null);\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      console.error('Please select a file.');\n      onUploadError('Please select a file.');\n      return;\n    }\n\n    try {\n      setIsUploading(true);\n\n      const formData = new FormData();\n      formData.append('file', file);\n\n      const response = await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      console.log('File uploaded successfully:', response.data);\n      setNumRows(response.data.numRows);\n      onFileUpload(response.data);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      onUploadError('An error occurred while uploading the file. Please try again.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" accept=\".csv,.json\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload</button>\n      {fileSize && <p>File Size: {fileSize} bytes</p>}\n      {numRows !== null && <p>Number of Rows: {numRows}</p>}\n      {isUploading && <p>Uploading...</p>}\n    </div>\n  );\n};\n\nFileUploader.propTypes = {\n  onFileUpload: PropTypes.func.isRequired,\n  onUploadError: PropTypes.func.isRequired,\n};\n\nexport default FileUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMiB,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC1CX,OAAO,CAACS,YAAY,CAAC;IACrBP,WAAW,CAACO,YAAY,CAACG,IAAI,CAAC;IAC9BR,UAAU,CAAC,IAAI,CAAC;IAChBP,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACd,IAAI,EAAE;MACTe,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;MACtClB,aAAa,CAAC,uBAAuB,CAAC;MACtC;IACF;IAEA,IAAI;MACFS,cAAc,CAAC,IAAI,CAAC;MAEpB,MAAMU,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEnB,IAAI,CAAC;MAE7B,MAAMoB,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,IAAI,CAAC,aAAa,EAAEJ,QAAQ,EAAE;QACzDK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFP,OAAO,CAACQ,GAAG,CAAC,6BAA6B,EAAEH,QAAQ,CAACI,IAAI,CAAC;MACzDnB,UAAU,CAACe,QAAQ,CAACI,IAAI,CAACpB,OAAO,CAAC;MACjCP,YAAY,CAACuB,QAAQ,CAACI,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7ClB,aAAa,CAAC,+DAA+D,CAAC;IAChF,CAAC,SAAS;MACRS,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,YAAY;MAACC,QAAQ,EAAEpB;IAAiB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrErC,OAAA;MAAQsC,OAAO,EAAEnB,YAAa;MAAAW,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7C9B,QAAQ,iBAAIP,OAAA;MAAA8B,QAAA,GAAG,aAAW,EAACvB,QAAQ,EAAC,QAAM;IAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC9C5B,OAAO,KAAK,IAAI,iBAAIT,OAAA;MAAA8B,QAAA,GAAG,kBAAgB,EAACrB,OAAO;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpD1B,WAAW,iBAAIX,OAAA;MAAA8B,QAAA,EAAG;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAACjC,EAAA,CArDIH,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAuDlBA,YAAY,CAACuC,SAAS,GAAG;EACvBtC,YAAY,EAAEL,SAAS,CAAC4C,IAAI,CAACC,UAAU;EACvCvC,aAAa,EAAEN,SAAS,CAAC4C,IAAI,CAACC;AAChC,CAAC;AAED,eAAezC,YAAY;AAAC,IAAAsC,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}