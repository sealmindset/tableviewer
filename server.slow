const express = require('express');
const fileUpload = require('express-fileupload');
const path = require('path');
const fs = require('fs');
const csvParser = require('csv-parser');

const app = express();

// Enable CORS
app.use((req, res, next) => {
  res.setHeader('Access-Control-Allow-Origin', 'http://localhost:3000'); // Change this to the origin of your React app
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  next();
});

app.use(fileUpload());

// Serve static files from the "uploads" directory
app.use(express.static(path.join(__dirname, 'uploads')));

// Handle file uploads
app.post('/api/upload', (req, res) => {
  if (!req.files || Object.keys(req.files).length === 0) {
    return res.status(400).json({ message: 'No files were uploaded.' });
  }

  const uploadedFile = req.files.file;
  const uploadPath = path.join(__dirname, 'uploads', uploadedFile.name);

  uploadedFile.mv(uploadPath, (err) => {
    if (err) {
      console.error('Error uploading file:', err);
      return res.status(500).json({ message: 'Error uploading file.' });
    }

    // Read and parse the uploaded CSV file
    const parsedData = [];
    fs.createReadStream(uploadPath)
      .pipe(csvParser())
      .on('data', (row) => {
        parsedData.push(row);
      })
      .on('end', () => {
        console.log('CSV file parsed successfully:', parsedData);
        res.json(parsedData);
      })
      .on('error', (parseError) => {
        console.error('Error parsing CSV file:', parseError);
        return res.status(500).json({ message: 'Error parsing CSV file: ' + parseError.message });
      });
  });
});

const PORT = process.env.PORT || 5555;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
