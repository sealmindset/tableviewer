{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/tableviewer/src/FileUploader.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = ({\n  onDataUpload,\n  onUploadError,\n  onFileChange\n}) => {\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      onDataUpload(response.data);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      onUploadError('An error occurred while uploading the file. Please try again.');\n    }\n  };\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    onFileChange(selectedFile); // Pass the selected file to App.js\n    onUploadError(null); // Clear any previous error\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv,.json\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = FileUploader;\nFileUploader.propTypes = {\n  onDataUpload: PropTypes.func.isRequired,\n  onUploadError: PropTypes.func.isRequired,\n  onFileChange: PropTypes.func.isRequired // Add this prop type\n};\n\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","PropTypes","axios","jsxDEV","_jsxDEV","FileUploader","onDataUpload","onUploadError","onFileChange","handleUpload","formData","FormData","append","file","response","post","headers","data","error","console","handleFileChange","event","selectedFile","target","files","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/tableviewer/src/FileUploader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst FileUploader = ({ onDataUpload, onUploadError, onFileChange }) => {\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      const response = await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      onDataUpload(response.data);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      onUploadError('An error occurred while uploading the file. Please try again.');\n    }\n  };\n\n  const handleFileChange = (event) => {\n    const selectedFile = event.target.files[0];\n    onFileChange(selectedFile); // Pass the selected file to App.js\n    onUploadError(null); // Clear any previous error\n  };\n\n  return (\n    <div>\n      <input type=\"file\" accept=\".csv,.json\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload</button>\n    </div>\n  );\n};\n\nFileUploader.propTypes = {\n  onDataUpload: PropTypes.func.isRequired,\n  onUploadError: PropTypes.func.isRequired,\n  onFileChange: PropTypes.func.isRequired, // Add this prop type\n};\n\nexport default FileUploader;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,YAAY;EAAEC,aAAa;EAAEC;AAAa,CAAC,KAAK;EACtE,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEC,IAAI,CAAC;MAE7B,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,aAAa,EAAEL,QAAQ,EAAE;QACzDM,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFV,YAAY,CAACQ,QAAQ,CAACG,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CX,aAAa,CAAC,+DAA+D,CAAC;IAChF;EACF,CAAC;EAED,MAAMa,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC1ChB,YAAY,CAACc,YAAY,CAAC,CAAC,CAAC;IAC5Bf,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB,CAAC;;EAED,oBACEH,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,YAAY;MAACC,QAAQ,EAAER;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrE5B,OAAA;MAAQ6B,OAAO,EAAExB,YAAa;MAAAgB,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACE,EAAA,GA/BI7B,YAAY;AAiClBA,YAAY,CAAC8B,SAAS,GAAG;EACvB7B,YAAY,EAAEL,SAAS,CAACmC,IAAI,CAACC,UAAU;EACvC9B,aAAa,EAAEN,SAAS,CAACmC,IAAI,CAACC,UAAU;EACxC7B,YAAY,EAAEP,SAAS,CAACmC,IAAI,CAACC,UAAU,CAAE;AAC3C,CAAC;;AAED,eAAehC,YAAY;AAAC,IAAA6B,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}