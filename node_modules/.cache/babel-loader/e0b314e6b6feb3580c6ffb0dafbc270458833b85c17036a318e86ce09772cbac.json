{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/tableviewer/src/DataTable.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTable, useSortBy, useGlobalFilter, useFilters } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DataTable = ({\n  data\n}) => {\n  _s();\n  console.log('DataTable: Data received:', data);\n  const columns = React.useMemo(() => data.length > 0 ? Object.keys(data[0]).map(key => ({\n    Header: key,\n    accessor: key\n  })) : [], [data]);\n  console.log('DataTable: Columns:', columns);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter\n  } = useTable({\n    columns,\n    data\n  }, useFilters, useGlobalFilter, useSortBy);\n  const {\n    globalFilter\n  } = state;\n  console.log('DataTable: State:', state);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        value: globalFilter || '',\n        onChange: e => {\n          console.log('DataTable: Search input:', e.target.value);\n          setGlobalFilter(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DataTable, \"alu81q60L+gDBc76cOugNuPA0pk=\", false, function () {\n  return [useTable];\n});\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useTable","useSortBy","useGlobalFilter","useFilters","jsxDEV","_jsxDEV","Fragment","_Fragment","DataTable","data","_s","console","log","columns","useMemo","length","Object","keys","map","key","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/tableviewer/src/DataTable.js"],"sourcesContent":["import React from 'react';\nimport { useTable, useSortBy, useGlobalFilter, useFilters } from 'react-table';\n\nconst DataTable = ({ data }) => {\n  console.log('DataTable: Data received:', data);\n\n  const columns = React.useMemo(\n    () =>\n      data.length > 0\n        ? Object.keys(data[0]).map((key) => ({\n            Header: key,\n            accessor: key,\n          }))\n        : [],\n    [data]\n  );\n\n  console.log('DataTable: Columns:', columns);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useFilters,\n    useGlobalFilter,\n    useSortBy\n  );\n\n  const { globalFilter } = state;\n\n  console.log('DataTable: State:', state);\n\n  return (\n    <>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={globalFilter || ''}\n          onChange={(e) => {\n            console.log('DataTable: Search input:', e.target.value);\n            setGlobalFilter(e.target.value);\n          }}\n        />\n      </div>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  <span>\n                    {column.isSorted ? (column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼') : ''}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default DataTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}